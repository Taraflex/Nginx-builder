name: build deb

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-deb:
    name: build deb
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up Python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install soft 
        run: sudo apt-get install -y locales wget build-essential autogen automake autoconf autotools-dev libgd-dev libreadline-dev libncurses5-dev libpcre3 libpcre3-dev libpng-dev dh-make quilt lsb-release debhelper dpkg-dev dh-systemd pkg-config zlib1g-dev libssl-dev openssl git perl libtool tar unzip xutils-dev python3-apt
      - name: Install python dependencies
        run: pip3 install -r requirements.txt
      - name: Build
        run: sudo mkdir -p /usr/src/nginx/modules && sudo chmod -R 777 /usr/src/nginx && ./main.py build -f config.yaml -r $GITHUB_RUN_NUMBER && DEB=$(find *.deb -type f | tail -n 1) && echo "DEB=$DEB" >> $GITHUB_ENV && echo "RELEASE_ASSET_URL=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/download/latest/$DEB" >> $GITHUB_ENV
      - name: Release
        uses: "ncipollo/release-action@v1.8.5"
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: "${{ env.DEB }}"
          body: "wget -N ${{ env.RELEASE_ASSET_URL }} && gdebi ${{ env.DEB }}"
          name: "${{ env.DEB }}"
          tag: "latest"
          token: "${{ secrets.GITHUB_TOKEN }}"